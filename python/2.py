# import urllib2
import re
import requests
import time
import random
import pandas as pd
from bs4 import BeautifulSoup
from openpyxl import Workbook
import xlrd
from ast import literal_eval
data=xlrd.open_workbook('aStock4_10.xlsx')#excle文件位置
sheet=data.sheets()[0] #读取第一个表
codes=sheet.col_values(1) #读取第一列
codes=codes[1:]
msci_ids=[]
company_names=[]
count = 0
for code in codes:
    cookies = {
        'COOKIE_SUPPORT': 'true',
        'EVICT_LIFERAY_LANGUAGE_ID': 'en_US',
        'NSC_JOdctk52djoenpmcm4jhopbeguyckd3': 'ffffffff09371edb45525d5f4f58455e445a4a423660',
        '__guid': '48416288.3291857846179853000.1589620250361.415',
        '_gid': 'GA1.2.939447867.1589620352',
        'msci_newsletter_floating_box': 'closed',
        'CS-OptIn': 'true',
        'GDPR-hide-banner': 'true',
        'Marketing-OptIn': 'true',
        '_hjid': '224773e3-cb5d-4082-b8a6-90c7a919e5bf',
        '_hjIncludedInSample': '1',
        'visitor_id36252': '425768159',
        'visitor_id36252-hash': 'b220c4d969c23d1d0a3e700c039229a725ce507dbb282b1b1528823a601dbca53d9cb8b178164e0fa45724261c4742e2c15d4d89',
        'monitor_count': '29',
        '_ga_1N2VH31REP': 'GS1.1.1589709514.8.1.1589709525.0',
        '_ga': 'GA1.2.13769966.1589620352',
        'LFR_SESSION_STATE_10163': '1589716731539',
        'JSESSIONID': 'CD061F7D95459380ACCC2D4780A61B90.jvmRoute-peu-cp-lapp0005',
        'ak_bmsc': '6AFA7BEBDA305D878181A68240E88A8617D16694413F00000227C15E35088B0D~plkWySL63CXHV6mULHFfn7Gfj/jXduFREEbTDuJjO3dMdqVdtVUKQ6W4FQJq5PqZAc0nn3M8cvbNM40X0u6T7wEAZMPOTOMNXmWrj3R/tjV8Z0yjp8GkCenkGJga+WEf8XK+Gr1bEqDaRpJIxdCWQ9YxMBPTJQHa3qNA3Zd8G74IpvmDzydRrMNtrTNP22Wtlfe+xtqr1L6q8MTtYdoNVBvKlpAukdcJtDur4IZ8l+Fxs=',
        'bm_sv': '02A8513B80608ACD344B3C49CA06E895~SwTEx1HCuXxQlyiGf5s/+bMnNICCggkK4sxV+0h5vW9lc7vS1iSzC8oly/f4PUNfnupciIihaEirxr2jmj0mGAk9y84JkgH0qiTs54FWDY8mRA6kIUMVRv0j/VlrgATmavI3C5ITRvsZ3eYZbjaV0w==',
    }

    headers = {
        'Connection': 'keep-alive',
        'Pragma': 'no-cache',
        'Cache-Control': 'no-cache',
        'Accept': '*/*',
        'DNT': '1',
        'X-Requested-With': 'XMLHttpRequest',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36',
        'Sec-Fetch-Site': 'same-origin',
        'Sec-Fetch-Mode': 'cors',
        'Referer': 'https://www.msci.com/esg-ratings/issuer/china-vanke-co-ltd/IID000000002142203',
        'Accept-Encoding': 'gzip, deflate, br',
        'Accept-Language': 'zh-CN,zh;q=0.9',
    }

    params = (
        ('p_p_id', 'esgratingsprofile'),
        ('p_p_lifecycle', '2'),
        ('p_p_state', 'normal'),
        ('p_p_mode', 'view'),
        ('p_p_resource_id', 'searchEsgRatingsProfiles'),
        ('p_p_cacheability', 'cacheLevelPage'),
        ('_esgratingsprofile_keywords',code),
    )
    response = requests.get('https://www.msci.com/esg-ratings', headers=headers, params=params, cookies=cookies)
    search_content=response.content
    search_content = str(search_content, encoding="utf-8")
    count = count+1
    if search_content == '[]':
        print('<%d> stock <%s> is not in msci' %(count,code))
        continue
    else:
        search_list = literal_eval(search_content)
        msci_id = search_list[0]['url']
        company_name = search_list[0]['encodedTitle']
        print('<%d> stock <%s> get msci title<%s> url <%s>' %(count,code,company_name, msci_id))
        msci_ids.append(msci_id)
        company_names.append(company_name)
print(msci_ids)
print(company_names)
count_msci=0
msci2excel=[]
# msci_ids
# company_names = ['gigadevice-semiconductor-beijing-inc','yifeng-pharmacy-chain-co-ltd']
for index,msci_id in enumerate(msci_ids):
    cookies = {
        'COOKIE_SUPPORT': 'true',
        'EVICT_LIFERAY_LANGUAGE_ID': 'en_US',
        'NSC_JOdctk52djoenpmcm4jhopbeguyckd3': 'ffffffff09371edb45525d5f4f58455e445a4a423660',
        '__guid': '48416288.3291857846179853000.1589620250361.415',
        '_gid': 'GA1.2.939447867.1589620352',
        'msci_newsletter_floating_box': 'closed',
        'CS-OptIn': 'true',
        'GDPR-hide-banner': 'true',
        'Marketing-OptIn': 'true',
        '_hjid': '224773e3-cb5d-4082-b8a6-90c7a919e5bf',
        '_hjIncludedInSample': '1',
        'visitor_id36252': '425768159',
        'visitor_id36252-hash': 'b220c4d969c23d1d0a3e700c039229a725ce507dbb282b1b1528823a601dbca53d9cb8b178164e0fa45724261c4742e2c15d4d89',
        'JSESSIONID': 'BD08CDA173DFBCA2D70EBDE06D955BD8.jvmRoute-peu-cp-lapp0005',
        'ak_bmsc': '5913A8C3DAE49E2DFEB48DA4FEAF3A111737DE2F94420000C5A5C05E8958EF42~pldVLx8szPAAxRLUwHwx3yzDhjEeVql3bAkwsBNKpokf/103Le1Gmra+mI2WtojihL34hih9mGLgU4AucbGXKKp8b4nXFcP142jVTd4EA6E2HURkMHuSwLHTkt5GW0UNBiT1dH+GQ3ccbdoQ4zAMLfWbtJSIwm9I4R3jgGS3t8NSbmZ13hvDy2nfRTXutnxBJ1xNn2sfxINibWtIMBO/mGuKnRitLV59DGD0mH7sYaMcCBsQ/nm0xibaRhf6Dh99qx',
        '_gat_UA-397044-15': '1',
        'LFR_SESSION_STATE_10163': '1589685224483',
        'bm_sv': '5F3A51AB27CF23E06679E067B0F7D66E~sm3nSpbouNQa14Hp1kEHBt/23oUAs5d6sV3pmPt+bmJT8D1Cue4yUSsk6+iLO0xBxVbcsmhjSPyqGy3C/c+nCUGPojvqcgFKoeE6FITe3newjTZnlRTrsz1qJI2bnkfgn/8Rr2rX9aTd75vEs4IbsWNRuYo+UEJCuKAaXoA7Z/8=',
        'monitor_count': '26',
        '_ga_1N2VH31REP': 'GS1.1.1589683656.4.1.1589685240.0',
        '_ga': 'GA1.2.13769966.1589620352',
    }

    headers = {
        'Connection': 'keep-alive',
        'Pragma': 'no-cache',
        'Cache-Control': 'no-cache',
        'Accept': '*/*',
        'DNT': '1',
        'X-Requested-With': 'XMLHttpRequest',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36',
        'Sec-Fetch-Site': 'same-origin',
        'Sec-Fetch-Mode': 'cors',
        'Referer': 'https://www.msci.com/esg-ratings/issuer/'+company_names[index]+'/'+msci_id,
        'Accept-Encoding': 'gzip, deflate, br',
        'Accept-Language': 'zh-CN,zh;q=0.9',
    }

    params = (
        ('p_p_id', 'esgratingsprofile'),
        ('p_p_lifecycle', '2'),
        ('p_p_state', 'normal'),
        ('p_p_mode', 'view'),
        ('p_p_resource_id', 'showEsgRatingsProfile'),
        ('p_p_cacheability', 'cacheLevelPage'),
        ('_esgratingsprofile_issuerId', msci_id),
    )
    html = requests.get('https://www.msci.com/esg-ratings', headers=headers, params=params, cookies=cookies)
    # content='''
    # b'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t<div id="_esgratingsprofile_esg-ratings-profile" class="esg-ratings-profile container-fluid container-fluid-max-xl">\n\t\t\n<div id="_esgratingsprofile_esg-ratings-profile-header" class="esg-ratings-profile-header">\n\t<div class="esg-ratings-profile-header-coredata">\n\t\t<div class="header-company-title">\n\t\t\tINDUSTRIAL BANK CO.,LTD.\n\t\t</div>\n\t\t<div class="header-company-ticker">\n\t\t\t(601166)\n\t\t</div>\n\t\t<div class="header-company-info">\n\t\t\t<div class="header-esg-industry">\n\t\t\t\t<b>Industry: </b> Banks\n\t\t\t</div>\n\t\t\t<div class="header-country">\n\t\t\t\t<b>Country: </b> China\n\t\t\t</div>\t\n\t\t</div>\n\t</div>\n\t\n\t<div class="esg-ratings-profile-header-ratingdata">\n\t\t<hr class="esgratings-profile-header-border-yellow">\n\t\t<div class="ratingdata-container">\n\t\t\t<div class="ratingdata-msci">\n\t\t\t\tMSCI\n\t\t\t\t<div class="ratingdata-esgratings">\n\t\t\t\t\tESG RATINGS\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="ratingdata-outercircle esgratings-profile-header-yellow">\n\t\t\t\t<div class="ratingdata-company-rating esg-rating-circle-a"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div class="ratingdata-table">\n\t\t    <div class="ratingdata-row">\n\t\t    \t\n\t\t\t        <div class="ratingdata-cell">\n\t\t\t        \t<div class="ratingdata-cell-content esg-rating-cell-grey-ccc">\n\t\t\t        \t</div>\n\t\t        \t</div>\n\t\t        \t\n\t\t\t        <div class="ratingdata-cell">\n\t\t\t        \t<div class="ratingdata-cell-content esg-rating-cell-grey-b">\n\t\t\t        \t</div>\n\t\t        \t</div>\n\t\t        \t\n\t\t\t        <div class="ratingdata-cell">\n\t\t\t        \t<div class="ratingdata-cell-content esg-rating-cell-grey-bb">\n\t\t\t        \t</div>\n\t\t        \t</div>\n\t\t        \t\n\t\t\t        <div class="ratingdata-cell">\n\t\t\t        \t<div class="ratingdata-cell-content esg-rating-cell-grey-bbb">\n\t\t\t        \t</div>\n\t\t        \t</div>\n\t\t        \t\n\t\t\t        <div class="ratingdata-cell esgratings-profile-header-yellow">\n\t\t\t        \t<div class="ratingdata-cell-content esg-rating-cell-white-a">\n\t\t\t        \t</div>\n\t\t        \t</div>\n\t\t        \t\n\t\t\t        <div class="ratingdata-cell">\n\t\t\t        \t<div class="ratingdata-cell-content esg-rating-cell-grey-aa">\n\t\t\t        \t</div>\n\t\t        \t</div>\n\t\t        \t\n\t\t\t        <div class="ratingdata-cell">\n\t\t\t        \t<div class="ratingdata-cell-content esg-rating-cell-grey-aaa">\n\t\t\t        \t</div>\n\t\t        \t</div>\n\t\t        \t\n\t\t    </div>\n\t\t</div>\n\t</div>\n</div>\n\n<script>\n\nfunction lowerFontSize(diff){\n\tvar title = $(\'.header-company-title\');\n\tvar lines = title.height() / parseInt(title.css(\'line-height\'), 10);\n\tvar fontSize = parseInt($(\'.header-company-title\').css(\'font-size\'));\n\t\n\t\n\tif(lines > 4){\n\t\tfontSize = fontSize - 2 + "px";\n\t\t$(\'.header-company-title\').css(\'font-size\', fontSize);\n\t\tlowerFontSize(diff-2);\n\t}\n\telse if(diff != 0){\n\t\tvar tickerFontSize = Math.min(fontSize - 2, 20) + "px";\n\t\tvar tickerLineHeight = tickerFontSize * 1.25 + "px";\n\t\tvar lineHeight = fontSize * 1.25 + "px";\n\t\t$(\'.header-company-title\').css(\'line-height\', lineHeight);\n\t\t$(\'.header-company-ticker\').css(\'line-height\', tickerLineHeight);\n\t\t$(\'.header-company-ticker\').css(\'font-size\', tickerFontSize);\n\t}\n}\n\n$(document).ready(function() {\n\tlowerFontSize(0);\n});\n\n</script>\n\n\t\t\n\n<hr>\n<div id="_esgratingsprofile_esg-ratings-profile-graphs"\n\tclass="esg-ratings-profile-graphs row">\n\t\t\n\t<div class="esg-rating-paragraph esg-rating-paragraph-hist col-lg-6">\n\t\t\n\t\t\t\n\t\t\t\tIndustrial Bank was upgraded in November, 2019.\n\t\t\t\n\t\t\t\n\t</div>\n\n\t<div class="esg-rating-subtitle-container esg-rating-subtitle-container-hist col-lg-6">\n\t\t<div class="esg-rating-subtitle">\n\t\t\t<h5>\n\t\t\t\tESG Rating history\n\t\t\t</h5>\n\t\t</div>\n\t\t<hr>\n        <div>\n            MSCI ESG Rating history data over the last five years or since records began.\n        </div>\n\t</div>\n\t\n\t<div id="_esgratingsprofile_esg-rating-history"\n\t\tclass="esg-ratings-profile-graph esg-ratings-profile-graph-hist col-lg-6"></div>\n\n\n\t<div class="esg-rating-paragraph esg-rating-paragraph-distr col-lg-6">\n\t\t\n\t\t\t\n\t\t\t\tIndustrial Bank is <span class="average-letters">Average</span> among 212 companies in the <b>banks industry</b>.\n\t\t\t\n\t\t\t\n\t</div>\n\t\n\t<div class="esg-rating-subtitle-container esg-rating-subtitle-container-distr col-lg-6">\n\t\t<div class="esg-rating-subtitle">\n\t\t\t<h5>\n\t\t\t\tESG Rating distribution\n\t\t\t</h5>\n\t\t</div>\n\t\t<hr>\n\t\t<div>\n\t\t\tUniverse: MSCI ACWI Index constituents banks, n=212.\n\t\t</div>\n\t</div>\n\t\t\n\t<div id="_esgratingsprofile_esg-rating-distribution"\n\t\tclass="esg-ratings-profile-graph esg-ratings-profile-graph-distr col-lg-6"></div>\n\n</div>\n<hr>\n<script type="text/javascript">\nvar msciDark = "#002036";\nvar msciWhite = "#FFFFFF";\nvar msciDarkGrey = "#666666";\nvar robotoRegular = "\'Roboto Regular\', sans-serif;";\nvar robotoBlack = "\'Roboto Black\', sans-serif;";\nvar opacity = 0.3;\nvar msciFontSizeH4 = "24px;"\nvar msciFontSizeLarge = "16px;"\nvar msciFontSizeMedium = "14px;"\nvar msciFontSizeSmall = "12px;"\nvar msciFontSizeSmaller = "10px;"\nvar msciFontSizeSmallest = "8px;"\nvar phone = 320;\nvar tablet = 768;\nvar desktop = 992;\n\n$(document).ready(function() {\n\tvar chartData = {};\n\tvar ratingTypes = [];\n\tvar ratingTypesValueAndColorMapping = {};\n\t\t\n\t\n\t\tratingTypes.push("CCC");\n\t\tratingTypesValueAndColorMapping["CCC"] = {\'value\': 0, \'color\': \'#CF333B\'};\n\t\t\n\t\tratingTypes.push("B");\n\t\tratingTypesValueAndColorMapping["B"] = {\'value\': 1, \'color\': \'#CF333B\'};\n\t\t\n\t\tratingTypes.push("BB");\n\t\tratingTypesValueAndColorMapping["BB"] = {\'value\': 2, \'color\': \'#FFB500\'};\n\t\t\n\t\tratingTypes.push("BBB");\n\t\tratingTypesValueAndColorMapping["BBB"] = {\'value\': 3, \'color\': \'#FFB500\'};\n\t\t\n\t\tratingTypes.push("A");\n\t\tratingTypesValueAndColorMapping["A"] = {\'value\': 4, \'color\': \'#FFB500\'};\n\t\t\n\t\tratingTypes.push("AA");\n\t\tratingTypesValueAndColorMapping["AA"] = {\'value\': 5, \'color\': \'#007567\'};\n\t\t\n\t\tratingTypes.push("AAA");\n\t\tratingTypesValueAndColorMapping["AAA"] = {\'value\': 6, \'color\': \'#007567\'};\n\t\t\n\n\tchartData.esgRatingHistory = {};\n\tchartData.esgRatingHistory.dates = [];\n\tchartData.esgRatingHistory.ratings = [];\n\tchartData.esgRatingDistribution = {};\n\tchartData.esgRatingDistribution.distribution = [];\n\n\t \n\t\tchartData.esgRatingHistory.dates.push(\'Apr-18\');\n\t\tvar rating = \'BBB\';\n\t\tvar map = {\n\t\t\t\ty: ratingTypesValueAndColorMapping[rating].value,\n\t\t\t\tx: 0,\n\t\t\t\tname: rating, \n\t\t\t\tcolor: ratingTypesValueAndColorMapping[rating].color\n\t\t}\n\t\tchartData.esgRatingHistory.ratings.push(map);\n\t\t \n\t\tchartData.esgRatingHistory.dates.push(\'Sep-18\');\n\t\tvar rating = \'BBB\';\n\t\tvar map = {\n\t\t\t\ty: ratingTypesValueAndColorMapping[rating].value,\n\t\t\t\tx: 1,\n\t\t\t\tname: rating, \n\t\t\t\tcolor: ratingTypesValueAndColorMapping[rating].color\n\t\t}\n\t\tchartData.esgRatingHistory.ratings.push(map);\n\t\t \n\t\tchartData.esgRatingHistory.dates.push(\'Nov-19\');\n\t\tvar rating = \'A\';\n\t\tvar map = {\n\t\t\t\ty: ratingTypesValueAndColorMapping[rating].value,\n\t\t\t\tx: 2,\n\t\t\t\tname: rating, \n\t\t\t\tcolor: ratingTypesValueAndColorMapping[rating].color\n\t\t}\n\t\tchartData.esgRatingHistory.ratings.push(map);\n\t\t \n\t\n\tvar esgRatingHistoryChart = Highcharts.chart(\'_esgratingsprofile_esg-rating-history\', {\n\t\tlegend: false,\n\t\tcredits: false,\n\t\ttitle: undefined,\n\t\tseries: [\n\t\t\t{\n\t\t\t\tcolor: msciDark,\n\t\t\t\tdata: chartData.esgRatingHistory.ratings,\n\t\t\t\tlineWidth: 2\n\t\t\t}\n\t\t],\n\t\tchart: {\n\t\t\ttype: "line",\n\t\t\theight: 250,\n\t\t\tstyle: {\n\t\t\t\t"fontFamily": robotoRegular,\n\t\t\t\t"fontSize": msciFontSizeSmall,\n\t\t\t\t"color": msciDark\n\t\t\t}\n\t\t},\n\t\tyAxis: {\n\t\t\tmin: -0.5,\n\t\t\tmax: ratingTypes.length-1,\n\t\t\tstartOnTick: false,\n\t\t\tshowFirstLabel: false,\n\t\t\ttitle: {\n\t\t\t\tenabled: false\n\t\t\t},\n\t\t\tlabels: {\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize: msciFontSizeMedium,\n\t\t\t\t\tcolor: msciDark\n\t\t\t\t}\n\t\t\t},\n\t\t\tcategories: ratingTypes,\n\t\t\ttickmarkPlacement: "on",\n\t\t\tgridLineWidth: 0,\n\t\t\tgridLineColor: msciDark,\n\t\t\tlineWidth: 1,\n\t\t\tlineColor: msciDark\n\t\t},\n\t\txAxis: {\n\t\t\tcategories: chartData.esgRatingHistory.dates,\n\t\t\tlabels: {\n\t\t\t\tautoRotation: [-45],\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize: msciFontSizeMedium,\n\t\t\t\t\tcolor: msciDark\n\t\t\t\t}\n\t\t\t},\n\t\t\ttickWidth: 0,\n\t\t\tlineWidth: 1,\n\t\t\tlineColor: msciDark\n\t\t},\n\t\tplotOptions: {\n\t\t\tline: {\n\t\t\t\tmarker: {\n\t\t\t\t\tsymbol: \'circle\',\n\t\t\t\t\tradius: 20\n\t\t\t\t},\n\t\t\t\tdataLabels : {\n\t\t\t\t\tenabled : true,\n\t\t\t\t\tformatter : function() {\n\t\t\t\t\t\treturn this.key;\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: msciFontSizeMedium,\n\t\t\t\t\t\ttextOutline: undefined,\n\t\t\t\t\t\tcolor: msciWhite\n\t\t\t\t\t},\n\t\t\t\t\tverticalAlign: \'middle\'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttooltip: {\n\t\t\tformatter: function () {\n\t\t\t\treturn \'<b>\' + this.x + \': \' + this.key + \'</b>\';\n\t\t\t}\n\t\t}\n\t}, function(chart) {\n\n        var newRadius = Math.min(chart.plotBox.width / chart.axes[0].categories.length / 2.5, 20);\n        var newFontSize = msciFontSizeMedium;\n        if(newRadius < 10) newFontSize = msciFontSizeSmallest;\n        else if(newRadius < 12) newFontSize = msciFontSizeSmaller;\n        else if(newRadius < 14) newFontSize = msciFontSizeSmall;\n        \n\t    chart.series[0].update({\n            marker: {\n                radius: newRadius\n            },\n\t\t\tdataLabels : {\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize: newFontSize\n\t\t\t\t}\n\t\t\t}\n\t    });\n    });\n\t\t\n\t\n\tvar maxValue = 0;\n\t \n\t\tvar selected = false\n\t\tvar rating = \'CCC\';\n\t\tvar color = "";\n\t\tvar fontColor = "";\n\t\tvar value = 1;\n\t\tif(value > maxValue) maxValue = value;\n\t\t\n\t\tif(selected){\n\t\t\tcolor = ratingTypesValueAndColorMapping[rating].color;\n\t\t\tfontColor = color;\n\t\t}\n\t\telse {\n\t\t\tcolor = new Highcharts.Color(ratingTypesValueAndColorMapping[rating].color).setOpacity(opacity).get(\'rgba\');\n\t\t\tfontColor = msciDark;\n\t\t}\n\t\t\n\t\tvar map = {\n\t\t\t\ty: value,\n\t\t\t\tx: ratingTypesValueAndColorMapping[rating].value,\n\t\t\t\tname: rating, \n\t\t\t\tcolor: color,\n\t\t\t\tselected: selected,\n\t\t\t\tdataLabels: {\n\t\t\t\t\tformatter : function() {\n\t\t\t\t\t\tif(this.point.selected) return \'<b>\' + this.y + \'% </b>\';\n\t\t\t\t\t\telse return \'<span style="opacity: \' + opacity + \';">\' + this.y + \'% </span>\';\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: msciFontSizeMedium,\n\t\t\t\t\t\tfontFamily: robotoRegular,\n\t\t\t\t\t\ttextOutline: undefined,\n\t\t\t\t\t\tfontWeight: "regular",\n\t\t\t\t\t\tcolor: fontColor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tchartData.esgRatingDistribution.distribution.push(map);\n\t\t \n\t\tvar selected = false\n\t\tvar rating = \'B\';\n\t\tvar color = "";\n\t\tvar fontColor = "";\n\t\tvar value = 8;\n\t\tif(value > maxValue) maxValue = value;\n\t\t\n\t\tif(selected){\n\t\t\tcolor = ratingTypesValueAndColorMapping[rating].color;\n\t\t\tfontColor = color;\n\t\t}\n\t\telse {\n\t\t\tcolor = new Highcharts.Color(ratingTypesValueAndColorMapping[rating].color).setOpacity(opacity).get(\'rgba\');\n\t\t\tfontColor = msciDark;\n\t\t}\n\t\t\n\t\tvar map = {\n\t\t\t\ty: value,\n\t\t\t\tx: ratingTypesValueAndColorMapping[rating].value,\n\t\t\t\tname: rating, \n\t\t\t\tcolor: color,\n\t\t\t\tselected: selected,\n\t\t\t\tdataLabels: {\n\t\t\t\t\tformatter : function() {\n\t\t\t\t\t\tif(this.point.selected) return \'<b>\' + this.y + \'% </b>\';\n\t\t\t\t\t\telse return \'<span style="opacity: \' + opacity + \';">\' + this.y + \'% </span>\';\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: msciFontSizeMedium,\n\t\t\t\t\t\tfontFamily: robotoRegular,\n\t\t\t\t\t\ttextOutline: undefined,\n\t\t\t\t\t\tfontWeight: "regular",\n\t\t\t\t\t\tcolor: fontColor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tchartData.esgRatingDistribution.distribution.push(map);\n\t\t \n\t\tvar selected = false\n\t\tvar rating = \'BB\';\n\t\tvar color = "";\n\t\tvar fontColor = "";\n\t\tvar value = 23;\n\t\tif(value > maxValue) maxValue = value;\n\t\t\n\t\tif(selected){\n\t\t\tcolor = ratingTypesValueAndColorMapping[rating].color;\n\t\t\tfontColor = color;\n\t\t}\n\t\telse {\n\t\t\tcolor = new Highcharts.Color(ratingTypesValueAndColorMapping[rating].color).setOpacity(opacity).get(\'rgba\');\n\t\t\tfontColor = msciDark;\n\t\t}\n\t\t\n\t\tvar map = {\n\t\t\t\ty: value,\n\t\t\t\tx: ratingTypesValueAndColorMapping[rating].value,\n\t\t\t\tname: rating, \n\t\t\t\tcolor: color,\n\t\t\t\tselected: selected,\n\t\t\t\tdataLabels: {\n\t\t\t\t\tformatter : function() {\n\t\t\t\t\t\tif(this.point.selected) return \'<b>\' + this.y + \'% </b>\';\n\t\t\t\t\t\telse return \'<span style="opacity: \' + opacity + \';">\' + this.y + \'% </span>\';\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: msciFontSizeMedium,\n\t\t\t\t\t\tfontFamily: robotoRegular,\n\t\t\t\t\t\ttextOutline: undefined,\n\t\t\t\t\t\tfontWeight: "regular",\n\t\t\t\t\t\tcolor: fontColor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tchartData.esgRatingDistribution.distribution.push(map);\n\t\t \n\t\tvar selected = false\n\t\tvar rating = \'BBB\';\n\t\tvar color = "";\n\t\tvar fontColor = "";\n\t\tvar value = 25;\n\t\tif(value > maxValue) maxValue = value;\n\t\t\n\t\tif(selected){\n\t\t\tcolor = ratingTypesValueAndColorMapping[rating].color;\n\t\t\tfontColor = color;\n\t\t}\n\t\telse {\n\t\t\tcolor = new Highcharts.Color(ratingTypesValueAndColorMapping[rating].color).setOpacity(opacity).get(\'rgba\');\n\t\t\tfontColor = msciDark;\n\t\t}\n\t\t\n\t\tvar map = {\n\t\t\t\ty: value,\n\t\t\t\tx: ratingTypesValueAndColorMapping[rating].value,\n\t\t\t\tname: rating, \n\t\t\t\tcolor: color,\n\t\t\t\tselected: selected,\n\t\t\t\tdataLabels: {\n\t\t\t\t\tformatter : function() {\n\t\t\t\t\t\tif(this.point.selected) return \'<b>\' + this.y + \'% </b>\';\n\t\t\t\t\t\telse return \'<span style="opacity: \' + opacity + \';">\' + this.y + \'% </span>\';\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: msciFontSizeMedium,\n\t\t\t\t\t\tfontFamily: robotoRegular,\n\t\t\t\t\t\ttextOutline: undefined,\n\t\t\t\t\t\tfontWeight: "regular",\n\t\t\t\t\t\tcolor: fontColor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tchartData.esgRatingDistribution.distribution.push(map);\n\t\t \n\t\tvar selected = true\n\t\tvar rating = \'A\';\n\t\tvar color = "";\n\t\tvar fontColor = "";\n\t\tvar value = 30;\n\t\tif(value > maxValue) maxValue = value;\n\t\t\n\t\tif(selected){\n\t\t\tcolor = ratingTypesValueAndColorMapping[rating].color;\n\t\t\tfontColor = color;\n\t\t}\n\t\telse {\n\t\t\tcolor = new Highcharts.Color(ratingTypesValueAndColorMapping[rating].color).setOpacity(opacity).get(\'rgba\');\n\t\t\tfontColor = msciDark;\n\t\t}\n\t\t\n\t\tvar map = {\n\t\t\t\ty: value,\n\t\t\t\tx: ratingTypesValueAndColorMapping[rating].value,\n\t\t\t\tname: rating, \n\t\t\t\tcolor: color,\n\t\t\t\tselected: selected,\n\t\t\t\tdataLabels: {\n\t\t\t\t\tformatter : function() {\n\t\t\t\t\t\tif(this.point.selected) return \'<b>\' + this.y + \'% </b>\';\n\t\t\t\t\t\telse return \'<span style="opacity: \' + opacity + \';">\' + this.y + \'% </span>\';\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: msciFontSizeMedium,\n\t\t\t\t\t\tfontFamily: robotoRegular,\n\t\t\t\t\t\ttextOutline: undefined,\n\t\t\t\t\t\tfontWeight: "regular",\n\t\t\t\t\t\tcolor: fontColor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tchartData.esgRatingDistribution.distribution.push(map);\n\t\t \n\t\tvar selected = false\n\t\tvar rating = \'AA\';\n\t\tvar color = "";\n\t\tvar fontColor = "";\n\t\tvar value = 13;\n\t\tif(value > maxValue) maxValue = value;\n\t\t\n\t\tif(selected){\n\t\t\tcolor = ratingTypesValueAndColorMapping[rating].color;\n\t\t\tfontColor = color;\n\t\t}\n\t\telse {\n\t\t\tcolor = new Highcharts.Color(ratingTypesValueAndColorMapping[rating].color).setOpacity(opacity).get(\'rgba\');\n\t\t\tfontColor = msciDark;\n\t\t}\n\t\t\n\t\tvar map = {\n\t\t\t\ty: value,\n\t\t\t\tx: ratingTypesValueAndColorMapping[rating].value,\n\t\t\t\tname: rating, \n\t\t\t\tcolor: color,\n\t\t\t\tselected: selected,\n\t\t\t\tdataLabels: {\n\t\t\t\t\tformatter : function() {\n\t\t\t\t\t\tif(this.point.selected) return \'<b>\' + this.y + \'% </b>\';\n\t\t\t\t\t\telse return \'<span style="opacity: \' + opacity + \';">\' + this.y + \'% </span>\';\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: msciFontSizeMedium,\n\t\t\t\t\t\tfontFamily: robotoRegular,\n\t\t\t\t\t\ttextOutline: undefined,\n\t\t\t\t\t\tfontWeight: "regular",\n\t\t\t\t\t\tcolor: fontColor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tchartData.esgRatingDistribution.distribution.push(map);\n\t\t \n\t\tvar selected = false\n\t\tvar rating = \'AAA\';\n\t\tvar color = "";\n\t\tvar fontColor = "";\n\t\tvar value = 1;\n\t\tif(value > maxValue) maxValue = value;\n\t\t\n\t\tif(selected){\n\t\t\tcolor = ratingTypesValueAndColorMapping[rating].color;\n\t\t\tfontColor = color;\n\t\t}\n\t\telse {\n\t\t\tcolor = new Highcharts.Color(ratingTypesValueAndColorMapping[rating].color).setOpacity(opacity).get(\'rgba\');\n\t\t\tfontColor = msciDark;\n\t\t}\n\t\t\n\t\tvar map = {\n\t\t\t\ty: value,\n\t\t\t\tx: ratingTypesValueAndColorMapping[rating].value,\n\t\t\t\tname: rating, \n\t\t\t\tcolor: color,\n\t\t\t\tselected: selected,\n\t\t\t\tdataLabels: {\n\t\t\t\t\tformatter : function() {\n\t\t\t\t\t\tif(this.point.selected) return \'<b>\' + this.y + \'% </b>\';\n\t\t\t\t\t\telse return \'<span style="opacity: \' + opacity + \';">\' + this.y + \'% </span>\';\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: msciFontSizeMedium,\n\t\t\t\t\t\tfontFamily: robotoRegular,\n\t\t\t\t\t\ttextOutline: undefined,\n\t\t\t\t\t\tfontWeight: "regular",\n\t\t\t\t\t\tcolor: fontColor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tchartData.esgRatingDistribution.distribution.push(map);\n\t\t \n\n\tvar width = window.innerWidth;\n\tvar bigCategoryFontSize;\n\tvar smallCategoryFontSize;\n    if(width < tablet){\n    \tbigCategoryFontSize = msciFontSizeSmall;\n    \tsmallCategoryFontSize = msciFontSizeSmaller;\n    }\n    else if(width < desktop){\n    \tbigCategoryFontSize = msciFontSizeMedium;\n    \tsmallCategoryFontSize = msciFontSizeSmall;\n    }\n    else{\n    \tbigCategoryFontSize = msciFontSizeLarge;\n    \tsmallCategoryFontSize = msciFontSizeMedium;\n    }\n\t\n\tvar esgRatingDistributionChart = Highcharts.chart(\'_esgratingsprofile_esg-rating-distribution\', {\n\t\tlegend: false,\n\t\tcredits: false,\n\t\ttitle: undefined,\n\t\tseries: [\n\t\t\t{\n\t\t\t\txAxis: 0,\n\t\t\t\tdata: chartData.esgRatingDistribution.distribution,\n\t\t\t\tborderColor: "transparent"\n\t\t\t},\n\t\t\t{\n\t\t\t\txAxis: 1,\n\t\t\t\ttype: \'scatter\'\n\t\t\t}\n\t\t],\n\t\tchart: {\n\t\t\ttype: "column",\n\t\t\theight: 277,\n\t\t\tstyle: {\n\t\t\t\t"fontFamily": robotoRegular,\n\t\t\t\t"fontSize": msciFontSizeSmall,\n\t\t\t\t"color": msciDark\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\trender: function () {\n\t\t\t\t\tif(this.selectedColumnMarker) {\n\t\t\t\t\t\tthis.selectedColumnMarker.destroy();\n\t\t\t\t\t}\n\t\t\t\t    var column = this.series[0].data[ratingTypesValueAndColorMapping["A"].value]\n\t\t\t\t\tvar rectangle = this.renderer.rect(column.shapeArgs.x, column.shapeArgs.y - 15, column.shapeArgs.width + 20, column.shapeArgs.height + 55).attr({\n\t\t\t            stroke: msciDark,\n\t\t\t            \'stroke-width\': 1,\n\t\t\t            zIndex: 4\n\t\t\t        }).add();\n\t\t\t\t    \n\t\t\t\t    this.selectedColumnMarker = rectangle;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tyAxis: {\n\t\t\tmin: 0,\n\t\t\tmax: maxValue * 1.15,\n\t\t\ttitle: {\n\t\t\t\tenabled: false\n\t\t\t},\n\t\t\tlabels: {\n\t\t\t\tenabled: false,\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize: smallCategoryFontSize,\n\t\t\t\t\tcolor: msciDark\n\t\t\t\t}\n\t\t\t},\n\t\t\tgridLineWidth: 0\n\t\t},\n\t\txAxis: [\n\t\t\t{\n\t\t\t\tcategories: ratingTypes,\n\t\t\t\ttickWidth: 0,\n\t\t\t\tlineColor: msciDark,\n\t\t\t\tlabels: {\n\t\t\t\t\tautoRotation: false,\n\t\t\t\t\tformatter: function() {\n\t\t\t\t\t\tif(this.value === "A") return this.value;\n\t\t\t\t\t\telse return \'<span style="opacity: \' + opacity + \';">\' + this.value + \'</span>\';\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: smallCategoryFontSize,\n\t\t\t\t\t\tcolor: msciDark\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\toffset: 25,\n\t\t\t\ttickWidth: 0,\n\t\t\t\tlineWidth: 0,\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 100,\n\t\t\t\ttickPositions: [14, 50, 86],\n\t\t\t\tlabels: {\n\t\t\t\t\tformatter: function() {\n\t\t\t\t\t\tvar color = null;\n\t\t\t\t\t\tvar groupName = null;\n\t\t\t\t\t\tvar selected = false;\n\t\t\t\t\t\tif(this.value == 14){\n\t\t\t\t\t\t\tcolor = "#CF333B";\n\t\t\t\t\t\t\tgroupName = "LAGGARD";\n\t\t\t\t\t\t\tif(false) selected = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(this.value == 50){\n\t\t\t\t\t\t\tcolor = "#FFB500";\n\t\t\t\t\t\t\tgroupName = "AVERAGE";\n\t\t\t\t\t\t\tif(true) selected = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tcolor = "#007567";\n\t\t\t\t\t\t\tgroupName = "LEADER";\n\t\t\t\t\t\t\tif(false) selected = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(selected) return \'<span style="fill:\' + color + \';">\' + groupName + \'</span>\';\n\t\t\t\t\t\telse return \'<span style="opacity: \' + opacity + \'; fill:\' + color + \';">\' + groupName + \'</span>\';\n\t\t\t\t\t}, \n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontSize: bigCategoryFontSize,\n\t\t\t\t\t\tfontWeight: "bold",\n\t\t\t\t\t\tfontFamily: robotoBlack\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t],\n\t\tplotOptions: {\n\t\t\tcolumn: {\n\t\t\t\tdataLabels : {\n\t\t\t\t\tenabled : true\n\t\t\t\t},\n\t\t\t\tstates: {\n\t\t\t\t\tselect: {\n\t\t\t\t\t\tcolor: undefined,\n\t\t\t\t\t\tborderColor: "transparent"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttooltip: {\n\t\t\tformatter: function () {\n\t\t\t\treturn \'<b>\' + this.x + \': \' + this.y + \'%</b>\';\n\t\t\t}\n\t\t}\n\t});\n\t\n\tHighcharts.addEvent(window, \'resize\', function(e) {\n        var newRadius = Math.min((esgRatingHistoryChart.containerWidth-60) / esgRatingHistoryChart.axes[0].categories.length / 2.5, 20);\n        var newFontSize = msciFontSizeMedium;\n        if(newRadius < 10) newFontSize = msciFontSizeSmallest;\n        else if(newRadius < 12) newFontSize = msciFontSizeSmaller;\n        else if(newRadius < 14) newFontSize = msciFontSizeSmall;\n        \n        esgRatingHistoryChart.series[0].update({\n            marker: {\n                radius: newRadius\n            },\n\t\t\tdataLabels : {\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize: newFontSize\n\t\t\t\t}\n\t\t\t}\n\t    });\n        \n        var width = window.innerWidth;\n        \n        if(width < tablet) newFontSize = msciFontSizeSmall;\n        else if(width < desktop) newFontSize = msciFontSizeMedium;\n        else newFontSize = msciFontSizeLarge;\n        \n        esgRatingDistributionChart.axes[1].update({\n        \tlabels: {\n        \t\tstyle: {\n        \t\t\tfontSize: newFontSize\n        \t\t}\n        \t}\n        }, false)\n        \n        if(width < tablet) newFontSize = msciFontSizeSmall;\n        else newFontSize = msciFontSizeMedium;\n        \n        esgRatingDistributionChart.axes[0].update({\n        \tlabels: {\n        \t\tstyle: {\n        \t\t\tfontSize: newFontSize\n        \t\t}\n        \t}\n        })\n    });\n\t\n});\n</script>\n\n\t\t\n<div id="_esgratingsprofile_esg-ratings-profile-industry-comparison" class="esg-ratings-profile-industry-comparison">\n\t<div class="esg-rating-paragraph">\n\t\tWe focus on the key issues material to the <b>banks industry</b>. Here is how <b>Industrial Bank</b> compares to industry peers. MSCI also evaluates companies on their controversial business activities (weapons, tobacco, gambling, global norms and principles etc)  and sustainable impact solutions (renewable energy, health, education etc). This information is only factored into the MSCI ESG Ratings from a financial risk perspective. For more details, visit the <a href="https://www.msci.com/esg-investing">ESG investing page.</a>\n\t</div>\n\t<div class="comparison-table row no-gutters">\t\n\t\t\n\t\t\t<div class="comparison-column col-lg-4">\n\t\t\t\t<div class="comparison-header comparison-header-laggard">\n\t\t\t\t\tESG LAGGARD\n\t\t\t\t\t<div class="esg-tooltip">ESG LAGGARD: lagging the industry in its management of these ESG risks</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="comparison-body row no-gutters justify-content-center">\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class="comparison-value col-xs-6">\n\t\t\t\t\t\t\t\t\t\t<div class=\'esg-rating-icon-esr-fin-sys\' />\n\t\t\t\t\t\t\t\t\t\t<span>Financial System Instability</span>\n\t\t\t\t\t\t\t\t\t\t<div class="esg-tooltip">This issue evaluates a company\xe2\x80\x99s risk oversight, governance, and commitments to ethical standards and the extent to which they may face enhanced regulatory scrutiny because of their contributions to systemic risk in financial markets</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class="comparison-column col-lg-4">\n\t\t\t\t<div class="comparison-header comparison-header-average">\n\t\t\t\t\tAVERAGE\n\t\t\t\t\t<div class="esg-tooltip">AVERAGE: mixed or unexceptional track record of managing these ESG risks relative to peers</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="comparison-body row no-gutters justify-content-center">\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class="comparison-value col-xs-6">\n\t\t\t\t\t\t\t\t\t\t<div class=\'esg-rating-icon-esr-gov\' />\n\t\t\t\t\t\t\t\t\t\t<span>Corporate Governance</span>\n\t\t\t\t\t\t\t\t\t\t<div class="esg-tooltip">This theme evaluates the extent to which companies\xe2\x80\x99 corporate governance practices may pose risks to investors</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class="comparison-value col-xs-6">\n\t\t\t\t\t\t\t\t\t\t<div class=\'esg-rating-icon-esr-safe-fin\' />\n\t\t\t\t\t\t\t\t\t\t<span>Financial Product Safety</span>\n\t\t\t\t\t\t\t\t\t\t<div class="esg-tooltip">This issue evaluates the potential for unanticipated credit losses, litigation, or regulatory change related to financial products that lack transparency or are unsafe to the end-user</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class="comparison-value col-xs-6">\n\t\t\t\t\t\t\t\t\t\t<div class=\'esg-rating-icon-esr-hum-cap\' />\n\t\t\t\t\t\t\t\t\t\t<span>Human Capital Development</span>\n\t\t\t\t\t\t\t\t\t\t<div class="esg-tooltip">This issue evaluates companies\xe2\x80\x99 capacity to attract, retain and develop their human capital</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class="comparison-value col-xs-6">\n\t\t\t\t\t\t\t\t\t\t<div class=\'esg-rating-icon-esr-priv-sec\' />\n\t\t\t\t\t\t\t\t\t\t<span>Privacy & Data Security</span>\n\t\t\t\t\t\t\t\t\t\t<div class="esg-tooltip">This issue evaluates the potential for regulatory risks, cost increases or reputational damage from a data breach or controversial use of personal data</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class="comparison-column col-lg-4">\n\t\t\t\t<div class="comparison-header comparison-header-leader">\n\t\t\t\t\tESG LEADER\n\t\t\t\t\t<div class="esg-tooltip">ESG LEADER: leading the industry in its management of these ESG risks</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="comparison-body row no-gutters justify-content-center">\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class="comparison-value col-xs-6">\n\t\t\t\t\t\t\t\t\t\t<div class=\'esg-rating-icon-esr-acc-fin\' />\n\t\t\t\t\t\t\t\t\t\t<span>Access to Finance</span>\n\t\t\t\t\t\t\t\t\t\t<div class="esg-tooltip">This issue evaluates companies\xe2\x80\x99 efforts to take advantage of opportunities for growth in finance products and services in developing countries and underserved markets (e.g. rural, small business)</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class="comparison-value col-xs-6">\n\t\t\t\t\t\t\t\t\t\t<div class=\'esg-rating-icon-esr-env-fin\' />\n\t\t\t\t\t\t\t\t\t\t<span>Financing Environmental Impact</span>\n\t\t\t\t\t\t\t\t\t\t<div class="esg-tooltip">This issue evaluates potential credit or reputational risks companies may face from indirect exposure to the environmental concerns facing borrowers</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t</div>\n\t\n</div>\n\n\t</div>\n'
    # '''
    # 选择lxml作为解析器
    soup = BeautifulSoup(html.content, 'lxml')
    # print(soup.prettify())#自动更正格式，使输出更美观
    data_list = []
    count_msci = count_msci + 1
    print('<%d><%s>origin content:%s' %(count_msci,msci_id,html.content))
    str_content = str(html.content, encoding="utf-8")
    if str_content == '':
        continue
    tmp = []
    company_name= soup.find(class_ = 'header-company-title').text
    tmp.append(company_name)
    company_ticker = soup.find(class_='header-company-ticker').text
    tmp.append(company_ticker)
    header_country = soup.find(class_='header-country').text
    tmp.append(header_country)
    header_industry = soup.find(class_='header-esg-industry').text
    tmp.append(header_industry)
    regex = re.compile("esg-rating-circle-[a-c]+")
    rate = regex.findall(str_content)
    tmp.append(rate[0])
    rating_history = soup.find(class_='esg-rating-paragraph esg-rating-paragraph-hist col-lg-6').text
    tmp.append(rating_history)
    level=soup.find(class_='esg-rating-paragraph esg-rating-paragraph-distr col-lg-6').text
    tmp.append(level)

    abc=soup.find_all('div',class_='comparison-body row no-gutters justify-content-center')
    for tag in abc:
        divs = tag.find_all('div', class_='comparison-value col-xs-6')
        span_string = ''
        for div in divs:
            spans = div.find_all('span')
            for span in spans:
                span_string = span_string + '-' + span.text
        tmp.append(span_string)

    print('<%d> %s' %(count_msci, tmp))
    msci2excel.append(tmp)

print(msci2excel)
wb=Workbook()
# 设置Excel文件名
dest_filename = 'companyinfo.xlsx'
# 新建一个表
ws1 = wb.active
setData = []
setData.append(msci2excel)
# 设置表头
titleList = ['company title', 'company ticker', 'country', 'industry','rate',
             'rating_history','level','ESG LAGGARD','AVERAGE','ESG LEADER']
for row in range(len(titleList)):
    c = row + 1
    ws1.cell(row=1, column=c, value=titleList[row])

# 填写表内容
for listIndex in range(len(setData)):
    ws1.append(setData[listIndex])

wb.save(filename=dest_filename)



